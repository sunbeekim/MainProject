name: Deploy All Services

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Docker Hub 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build & Push Flask AI
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/flask-ai:latest ./Flask
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/flask-ai:latest

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build & Push Gateway Service
        run: |
          cd GateWay
          chmod +x ./gradlew
          ./gradlew clean build
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/gateway-service:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/gateway-service:latest

      - name: Build & Push Core Service
        run: |
          cd SpringService
          chmod +x ./gradlew
          ./gradlew clean build
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/core-service:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/core-service:latest

      - name: Build & Push Assist Service
        run: |
          cd AssistService
          chmod +x ./gradlew
          ./gradlew clean build
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/assist-service:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/assist-service:latest

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Build & Push Frontend
        run: |
          cd vite-react-teamsketch
          npm install
          npm run build
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/frontend:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/frontend:latest

      - name: Build & Push Nginx
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/nginx-service:latest ./nginx
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/nginx-service:latest

      - name: Deploy Services
        run: |
          docker network create teamsketch-network || true
          
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/flask-ai:latest
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/gateway-service:latest
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/core-service:latest
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/assist-service:latest
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/frontend:latest
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/nginx-service:latest

          docker stop flask-container gateway-container core-container assist-container frontend-container nginx-container || true
          docker rm flask-container gateway-container core-container assist-container frontend-container nginx-container || true

          docker run -d --name flask-container --network teamsketch-network -p 8001:8001 ${{ secrets.DOCKER_HUB_USERNAME }}/flask-ai:latest
          docker run -d --name gateway-container --network teamsketch-network -p 8080:8080 ${{ secrets.DOCKER_HUB_USERNAME }}/gateway-service:latest
          docker run -d --name core-container --network teamsketch-network -p 8081:8081 ${{ secrets.DOCKER_HUB_USERNAME }}/core-service:latest
          docker run -d --name assist-container --network teamsketch-network -p 8082:8082 ${{ secrets.DOCKER_HUB_USERNAME }}/assist-service:latest
          docker run -d --name frontend-container --network teamsketch-network -p 3000:3000 ${{ secrets.DOCKER_HUB_USERNAME }}/frontend:latest
          docker run -d --name nginx-container --network teamsketch-network -p 80:80 ${{ secrets.DOCKER_HUB_USERNAME }}/nginx-service:latest
