name: Deploy All Services

on:
  push:
    branches: [ main ]

jobs:
  docker-login:
    runs-on: ubuntu-latest
    steps:
      - name: Docker Hub 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

  build-and-deploy-flask:
    runs-on: ubuntu-latest
    needs: docker-login
    steps:
      - uses: actions/checkout@v2
      - name: Build Flask AI Service
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/flask-ai:latest ./Flask
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/flask-ai:latest

    build-and-deploy-gateway:
    runs-on: ubuntu-latest
    needs: build-and-deploy-flask
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Build Spring Gateway
        run: |
          cd GateWay
          chmod +x ./gradlew
          ./gradlew clean build
      - name: Build & Push Gateway Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/gateway-service ./GateWay
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/gateway-service
    runs-on: ubuntu-latest
  build-and-deploy-core:
    runs-on: ubuntu-latest
    needs: build-and-deploy-gateway
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Build Core Spring Service
        run: |
          cd SpringService
          chmod +x ./gradlew
          ./gradlew clean build
      - name: Build & Push Core Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/core-service ./SpringService
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/core-service
    runs-on: ubuntu-latest
  build-and-deploy-assist:
    runs-on: ubuntu-latest
    needs: build-and-deploy-core
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Build Assist Spring Service
        run: |
          cd AssistService
          chmod +x ./gradlew
          ./gradlew clean build
      - name: Build & Push Assist Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/assist-service ./AssistService
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/assist-service
    runs-on: ubuntu-latest
  build-and-deploy-frontend:
    runs-on: ubuntu-latest
    needs: build-and-deploy-assist
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'
      - name: Build Frontend
        run: |
          cd vite-react-teamsketch
          npm install
          npm run build
      - name: Build & Push Frontend Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/frontend ./vite-react-teamsketch
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/frontend
    runs-on: ubuntu-latest
  build-and-deploy-nginx:
    runs-on: ubuntu-latest
    needs: build-and-deploy-frontend
    steps:
      - uses: actions/checkout@v2
      - name: Build & Push Nginx Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/nginx-service ./nginx
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/nginx-service
    runs-on: ubuntu-latest
  deploy-locally:
    runs-on: ubuntu-latest
    needs: [build-and-deploy-nginx]
    steps:
      - name: Deploy Services Locally
        run: |
          docker network create teamsketch-network || true
          
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/flask-ai
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/gateway-service
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/core-service
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/assist-service
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/frontend
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/nginx-service
          docker rm flask-container gateway-container core-container assist-container frontend-container nginx-container || true
          docker stop flask-container gateway-container core-container assist-container frontend-container nginx-container || true
          docker rm flask-container gateway-container core-container assist-container frontend-container nginx-container || true
          docker run -d --name gateway-container --network teamsketch-network -p 8080:8080 ${{ secrets.DOCKER_HUB_USERNAME }}/gateway-service
          docker run -d --name flask-container --network teamsketch-network -p 8001:8001 ${{ secrets.DOCKER_HUB_USERNAME }}/flask-ai
          docker run -d --name gateway-container --network teamsketch-network -p 8080:8080 ${{ secrets.DOCKER_HUB_USERNAME }}/gateway-service
          docker run -d --name core-container --network teamsketch-network -p 8081:8081 ${{ secrets.DOCKER_HUB_USERNAME }}/core-service
          docker run -d --name assist-container --network teamsketch-network -p 8082:8082 ${{ secrets.DOCKER_HUB_USERNAME }}/assist-service
          docker run -d --name frontend-container --network teamsketch-network -p 3000:3000 ${{ secrets.DOCKER_HUB_USERNAME }}/frontend
          docker run -d --name nginx-container --network teamsketch-network -p 80:80 ${{ secrets.DOCKER_HUB_USERNAME }}/nginx-service
