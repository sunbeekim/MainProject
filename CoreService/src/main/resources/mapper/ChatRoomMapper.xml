<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.ChatRoomMapper">
    
    <!-- 채팅방 생성 -->
    <insert id="createChatRoom" parameterType="com.example.demo.model.chat.ChatRoom" useGeneratedKeys="true" keyProperty="chatroomId">
        INSERT INTO chatrooms (
            chatname, product_id, request_email, last_message, last_message_time, status, created_at, updated_at
        ) VALUES (
            #{chatname}, #{productId}, #{requestEmail}, #{lastMessage}, #{lastMessageTime}, #{status}, NOW(), NOW()
        )
    </insert>
    
    <!-- 채팅방 ID로 채팅방 조회 (이메일 사용자와 관련된 채팅방만) -->
    <select id="findChatRoomById" resultMap="chatRoomResultMap">
        SELECT 
            cr.*, p.email as seller_email
        FROM 
            chatrooms cr
            JOIN products p ON cr.product_id = p.id
        WHERE 
            cr.chatroom_id = #{chatroomId}
            AND (p.email = #{email} OR cr.request_email = #{email})
    </select>
    
    <!-- 상품 ID와 구매자 이메일로 채팅방 조회 -->
    <select id="findChatRoomByProductAndBuyer" resultMap="chatRoomResultMap">
        SELECT 
            cr.*, p.email as seller_email
        FROM 
            chatrooms cr
            JOIN products p ON cr.product_id = p.id
        WHERE 
            cr.product_id = #{productId} 
            AND cr.request_email = #{requestEmail}
    </select>
    
    <!-- 사용자와 관련된 채팅방 목록 조회 (수정: 요구사항에 맞게 대기 또는 승인인 요청에 해당하는 채팅방만 반환) -->
    <select id="findChatRoomsByUser" resultMap="chatRoomResultMap">
        SELECT 
            cr.*, p.email as seller_email,
            (SELECT COUNT(*) FROM messages m 
             WHERE m.chatroom_id = cr.chatroom_id 
             AND m.sender_email != #{email} 
             AND m.is_read = false) as unread_count
        FROM 
            chatrooms cr
            JOIN products p ON cr.product_id = p.id
            LEFT JOIN ProductRequests pr ON cr.product_id = pr.product_id 
        WHERE 
            (
                -- 1. 채팅방에서 구매자로 참여하고 있는 경우 (request_email이 현재 사용자)
                (cr.request_email = #{email} AND EXISTS (
                    SELECT 1 FROM ProductRequests 
                    WHERE product_id = cr.product_id 
                    AND requester_email = #{email}
                    AND (approval_status = '승인' OR approval_status = '대기')
                ))
                OR
                -- 2. 상품 등록자로 참여하고 있는 경우 (상품의 email이 현재 사용자)
                (p.email = #{email} AND EXISTS (
                    SELECT 1 FROM ProductRequests 
                    WHERE product_id = cr.product_id
                    AND (approval_status = '승인' OR approval_status = '대기')
                ))
            )
        ORDER BY 
            cr.last_message_time DESC
    </select>
    
    <!-- 채팅방 상태 변경 -->
    <update id="updateChatRoomStatus">
        UPDATE 
            chatrooms
        SET 
            status = #{status},
            updated_at = NOW()
        WHERE 
            chatroom_id = #{chatroomId}
    </update>
    
    <!-- 채팅방 마지막 메시지 및 시간 업데이트 -->
    <update id="updateChatRoom" parameterType="com.example.demo.model.chat.ChatRoom">
        UPDATE 
            chatrooms
        SET 
            last_message = #{lastMessage},
            last_message_time = #{lastMessageTime},
            updated_at = NOW()
        WHERE 
            chatroom_id = #{chatroomId}
    </update>

    <!-- 채팅방 마지막 메시지 및 시간 업데이트 (직접 파라미터 사용) -->
    <update id="updateChatRoomLastMessage">
        UPDATE 
            chatrooms
        SET 
            last_message = #{lastMessage},
            last_message_time = #{lastMessageTime},
            updated_at = NOW()
        WHERE 
            chatroom_id = #{chatroomId}
    </update>
    
    <!-- 결과 매핑 -->
    <resultMap id="chatRoomResultMap" type="com.example.demo.model.chat.ChatRoom">
        <id property="chatroomId" column="chatroom_id"/>
        <result property="chatname" column="chatname"/>
        <result property="productId" column="product_id"/>
        <result property="requestEmail" column="request_email"/>
        <result property="sellerEmail" column="seller_email"/>
        <result property="lastMessage" column="last_message"/>
        <result property="lastMessageTime" column="last_message_time"/>
        <result property="status" column="status"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="unreadCount" column="unread_count"/>
    </resultMap>

    <!-- 모집중 또는 승인된 채팅방 조회 쿼리 수정 -->
    <select id="findActiveChatRoomsByUser" resultMap="chatRoomResultMap">
        SELECT 
            cr.*, p.email as seller_email,
            (SELECT COUNT(*) FROM messages m 
             WHERE m.chatroom_id = cr.chatroom_id 
             AND m.sender_email != #{email} 
             AND m.is_read = false) as unread_count
        FROM 
            chatrooms cr
            JOIN products p ON cr.product_id = p.id
            LEFT JOIN ProductRequests pr ON cr.product_id = pr.product_id 
                                        AND (cr.request_email = pr.requester_email 
                                             OR pr.requester_email = #{email})
        WHERE 
            -- 사용자와 관련된 채팅방 검색
            (p.email = #{email} OR cr.request_email = #{email} OR pr.requester_email = #{email})
            AND (
                -- 조건 1: 상품 등록자인 경우 - 모든 채팅방 볼 수 있음
                (p.email = #{email})
                OR
                -- 조건 2: 모집 중인 상품의 신청자인 경우
                (p.is_visible = true AND (cr.request_email = #{email} OR pr.requester_email = #{email}))
                OR
                -- 조건 3: 모집 완료 상품의 승인된 신청자인 경우
                (p.is_visible = false AND 
                    ((cr.request_email = #{email} AND EXISTS (
                        SELECT 1 FROM ProductRequests 
                        WHERE product_id = p.id AND requester_email = #{email} AND approval_status = '승인'
                    )) 
                    OR 
                    (pr.requester_email = #{email} AND pr.approval_status = '승인'))
                )
            )
        ORDER BY 
            cr.last_message_time DESC
    </select>

</mapper>

