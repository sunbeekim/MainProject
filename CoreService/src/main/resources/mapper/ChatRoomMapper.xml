<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.ChatRoomMapper">
    
    <!-- 채팅방 생성 -->
    <insert id="createChatRoom" parameterType="com.example.demo.model.chat.ChatRoom" useGeneratedKeys="true" keyProperty="chatroomId">
        INSERT INTO chatrooms (
            chatname, product_id, buyer_email, last_message, last_message_time, status, created_at, updated_at
        ) VALUES (
            #{chatname}, #{productId}, #{buyerEmail}, #{lastMessage}, #{lastMessageTime}, #{status}, NOW(), NOW()
        )
    </insert>
    
    <!-- 채팅방 ID로 채팅방 조회 (이메일 사용자와 관련된 채팅방만) -->
    <select id="findChatRoomById" resultMap="chatRoomResultMap">
        SELECT 
            cr.*, p.email as seller_email
        FROM 
            chatrooms cr
            JOIN products p ON cr.product_id = p.id
        WHERE 
            cr.chatroom_id = #{chatroomId}
            AND (p.email = #{email} OR cr.buyer_email = #{email})
    </select>
    
    <!-- 상품 ID와 구매자 이메일로 채팅방 조회 -->
    <select id="findChatRoomByProductAndBuyer" resultMap="chatRoomResultMap">
        SELECT 
            cr.*, p.email as seller_email
        FROM 
            chatrooms cr
            JOIN products p ON cr.product_id = p.id
        WHERE 
            cr.product_id = #{productId} 
            AND cr.buyer_email = #{buyerEmail}
    </select>
    
    <!-- 사용자와 관련된 채팅방 목록 조회 -->
    <select id="findChatRoomsByUser" resultMap="chatRoomResultMap">
        SELECT 
            cr.*, p.email as seller_email
        FROM 
            chatrooms cr
            JOIN products p ON cr.product_id = p.id
        WHERE 
            p.email = #{email} OR cr.buyer_email = #{email}
        ORDER BY 
            cr.last_message_time DESC
    </select>
    
    <!-- 채팅방 상태 변경 -->
    <update id="updateChatRoomStatus">
        UPDATE 
            chatrooms
        SET 
            status = #{status},
            updated_at = NOW()
        WHERE 
            chatroom_id = #{chatroomId}
    </update>
    
    <!-- 채팅방의 마지막 메시지 및 시간 업데이트 -->
    <update id="updateChatRoomLastMessage">
        UPDATE 
            chatrooms
        SET 
            last_message = #{lastMessage},
            last_message_time = #{lastMessageTime},
            updated_at = NOW()
        WHERE 
            chatroom_id = #{chatroomId}
    </update>
    
    <!-- 결과 매핑 -->
    <resultMap id="chatRoomResultMap" type="com.example.demo.model.chat.ChatRoom">
        <id property="chatroomId" column="chatroom_id"/>
        <result property="chatname" column="chatname"/>
        <result property="productId" column="product_id"/>
        <result property="buyerEmail" column="buyer_email"/>
        <result property="sellerEmail" column="seller_email"/>
        <result property="lastMessage" column="last_message"/>
        <result property="lastMessageTime" column="last_message_time"/>
        <result property="status" column="status"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

</mapper>
