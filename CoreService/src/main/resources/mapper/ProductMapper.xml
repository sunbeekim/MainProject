<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.mapper.Market.ProductMapper">

    <!-- 상품 추가 -->
    <insert id="insertProduct" parameterType="com.example.demo.model.Market.Product" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO products (
        product_code, title, description, price, email, category_id, hobby_id,  <!-- hobby_id 추가 -->
        transaction_type, registration_type, max_participants, start_date, end_date,  <!-- 모집인원, 일정 기간 추가 -->
        latitude, longitude, meeting_place, address, created_at, updated_at
        ) VALUES (
        #{productCode}, #{title}, #{description}, #{price}, #{email}, #{categoryId}, #{hobbyId},  <!-- hobby_id 추가 -->
        #{transactionType}, #{registrationType}, #{maxParticipants}, #{startDate}, #{endDate},  <!-- 모집인원, 일정 기간 추가 -->
        #{latitude}, #{longitude}, #{meetingPlace}, #{address},
        NOW(), NOW()
        )
    </insert>


    <!-- 특정 상품 조회 (productCode 포함 & thumbnailPath 기본값 설정) -->
    <select id="findById" parameterType="long" resultMap="ProductWithImagesMap">
        SELECT
            p.id,
            p.product_code,
            p.title,
            p.description,
            p.price,
            p.email,
            p.category_id,
            p.hobby_id,  <!-- hobby_id 추가 -->
            p.transaction_type,
            p.registration_type,
            p.max_participants,  <!-- 모집인원 추가 -->
            p.start_date,  <!-- 일정 시작일 추가 -->
            p.end_date,  <!-- 일정 종료일 추가 -->
            p.latitude,
            p.longitude,
            p.meeting_place,
            p.address,
            p.created_at,
            p.updated_at,
            -- 대표 이미지 (thumbnailPath) 설정 (NULL 방지)
            COALESCE(
                    (SELECT image_path FROM productimages pi WHERE product_id = p.id AND is_thumbnail = TRUE LIMIT 1),
                    (SELECT image_path FROM productimages pi WHERE product_id = p.id LIMIT 1),
                    '/uploads/default_thumbnail.jpg'
            ) AS thumbnail_path,
            pi.image_path
        FROM products p
                 LEFT JOIN productimages pi ON p.id = pi.product_id
        WHERE p.id = #{id}
    </select>

    <!-- 특정 카테고리 상품 조회 + 정렬 (이미지 포함) -->
    <select id="findFilteredProducts" resultMap="ProductWithImagesMap">
        SELECT
        p.id,
        p.product_code,
        p.title,
        p.description,
        p.price,
        p.email,
        p.category_id,
        p.hobby_id,  <!-- hobby_id 추가 -->
        p.transaction_type,
        p.registration_type,
        p.max_participants,  <!-- 모집인원 추가 -->
        p.start_date,  <!-- 일정 시작일 추가 -->
        p.end_date,  <!-- 일정 종료일 추가 -->
        p.latitude,
        p.longitude,
        p.meeting_place,
        p.address,
        p.created_at,
        p.updated_at,
        COALESCE(
        (SELECT image_path FROM productimages WHERE product_id = p.id AND is_thumbnail = TRUE LIMIT 1),
        (SELECT image_path FROM productimages WHERE product_id = p.id LIMIT 1),
        '/uploads/default_thumbnail.jpg'
        ) AS thumbnail_path,
        pi.image_path
        FROM products p
        LEFT JOIN productimages pi ON p.id = pi.product_id
        <where>
            <if test="categoryId != null">
                p.category_id = #{categoryId}
            </if>
        </where>
        <choose>
            <when test="sort == 'price'">
                ORDER BY p.price
            </when>
            <when test="sort == 'createdAt'">
                ORDER BY p.created_at DESC
            </when>
            <otherwise>
                ORDER BY p.id DESC
            </otherwise>
        </choose>
    </select>

    <!-- 내가 등록한 상품 목록 조회 (구매만) -->
    <select id="findMyRegisteredBuyProducts" parameterType="string" resultMap="ProductWithImagesMap">
        SELECT * FROM products
        WHERE email = #{email} AND registration_type = '구매'
        ORDER BY created_at DESC;
    </select>

    <!-- 내가 등록한 상품 목록 조회 (판매만) -->
    <select id="findMyRegisteredSellProducts" parameterType="string" resultMap="ProductWithImagesMap">
        SELECT * FROM products
        WHERE email = #{email} AND registration_type = '판매'
        ORDER BY created_at DESC;
    </select>

    <!-- 내가 요청한 상품 목록 조회 (구매 요청만) -->
    <select id="findMyRequestedBuyProducts" parameterType="string" resultMap="ProductWithImagesMap">
        SELECT * FROM products
        WHERE email = #{email} AND registration_type = '구매 요청'
        ORDER BY created_at DESC;
    </select>

    <!-- 내가 요청한 상품 목록 조회 (판매 요청만) -->
    <select id="findMyRequestedSellProducts" parameterType="string" resultMap="ProductWithImagesMap">
        SELECT * FROM products
        WHERE email = #{email} AND registration_type = '판매 요청'
        ORDER BY created_at DESC;
    </select>

    <!--사용자(이메일)가 등록한 상품별 목록 조회 (구매, 판매, 구매 요청, 판매 요청) -->
    <select id="findProductsByEmailAndType" parameterType="map" resultMap="ProductWithImagesMap">
        SELECT
        p.id,
        p.product_code,
        p.title,
        p.description,
        p.price,
        p.email,
        p.category_id,
        p.hobby_id, <!-- hobby_id 추가 -->
        p.transaction_type,
        p.registration_type,
        p.max_participants,  <!-- 모집인원 추가 -->
        p.start_date,  <!-- 일정 시작일 추가 -->
        p.end_date,  <!-- 일정 종료일 추가 -->
        p.latitude,
        p.longitude,
        p.meeting_place,
        p.address,
        p.created_at,
        p.updated_at,
        -- 대표 이미지 설정 (썸네일이 있으면 우선, 없으면 첫 번째 이미지, 없으면 기본 이미지)
        COALESCE(
        (SELECT image_path FROM productimages WHERE product_id = p.id AND is_thumbnail = TRUE LIMIT 1),
        (SELECT image_path FROM productimages WHERE product_id = p.id LIMIT 1),
        '/uploads/default_thumbnail.jpg'
        ) AS thumbnail_path,
        pi.image_path
        FROM products p
        LEFT JOIN productimages pi ON p.id = pi.product_id
        WHERE p.email = #{email}
        AND p.registration_type IN
        <foreach item="type" collection="types" open="(" separator="," close=")">
            #{type}
        </foreach>
        ORDER BY p.created_at DESC;
    </select>


    <!-- 전체 상품 조회 (상품별 대표 이미지 포함) -->
    <select id="findAll" resultMap="ProductWithImagesMap">
        SELECT
            p.id,
            p.product_code,
            p.title,
            p.description,
            p.price,
            p.email,
            p.category_id,
            p.hobby_id,  <!-- hobby_id 추가 -->
            p.transaction_type,
            p.registration_type,
            p.max_participants,  <!-- 모집인원 추가 -->
            p.start_date,  <!-- 일정 시작일 추가 -->
            p.end_date,  <!-- 일정 종료일 추가 -->
            p.latitude,
            p.longitude,
            p.meeting_place,
            p.address,
            p.created_at,
            p.updated_at,
            COALESCE(
                    (SELECT image_path FROM productimages WHERE product_id = p.id AND is_thumbnail = TRUE LIMIT 1),
                    (SELECT image_path FROM productimages WHERE product_id = p.id LIMIT 1),
                    '/uploads/default_thumbnail.jpg'
            ) AS thumbnail_path,
            pi.image_path
        FROM products p
                 LEFT JOIN productimages pi ON p.id = pi.product_id
        ORDER BY p.id DESC
    </select>

    <!-- 결과 매핑: 이미지 리스트와 대표 이미지 포함 -->
    <resultMap id="ProductWithImagesMap" type="com.example.demo.model.Market.Product">
        <id property="id" column="id"/>
        <result property="productCode" column="product_code"/>
        <result property="title" column="title"/>
        <result property="description" column="description"/>
        <result property="price" column="price"/>
        <result property="email" column="email"/>
        <result property="categoryId" column="category_id"/>
        <result property="hobbyId" column="hobby_id"/>  <!-- hobby_id 추가 -->
        <result property="transactionType" column="transaction_type"/>
        <result property="registrationType" column="registration_type"/>
        <result property="maxParticipants" column="max_participants"/>  <!-- 모집인원 추가 -->
        <result property="startDate" column="start_date"/>  <!-- 일정 시작일 추가 -->
        <result property="endDate" column="end_date"/>  <!-- 일정 종료일 추가 -->
        <result property="latitude" column="latitude"/>
        <result property="longitude" column="longitude"/>
        <result property="meetingPlace" column="meeting_place"/>
        <result property="address" column="address"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>

        <!-- 대표 이미지 (thumbnailPath) 추가 -->
        <result property="thumbnailPath" column="thumbnail_path"/>

        <!-- imagePaths를 collection으로 올바르게 매핑 -->
        <collection property="imagePaths" ofType="java.lang.String">
            <result column="image_path"/>
        </collection>
    </resultMap>

</mapper>
