<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.HobbyMapper">

    <!-- 모든 취미 목록 조회 -->
    <select id="getAllHobbies" resultType="com.example.demo.model.Hobby">
        SELECT hobby_id as hobbyId, hobby_name as hobbyName
        FROM hobbies
        ORDER BY hobby_name
    </select>

    <!-- 취미 ID로 취미 조회 -->
    <select id="getHobbyById" parameterType="long" resultType="com.example.demo.model.Hobby">
        SELECT hobby_id as hobbyId, hobby_name as hobbyName
        FROM hobbies
        WHERE hobby_id = #{hobbyId}
    </select>

    <!-- 취미 ID로 카테고리 목록 조회 -->
    <select id="getCategoriesByHobbyId" parameterType="long" resultType="com.example.demo.model.Category">
        SELECT c.category_id as categoryId, c.category_name as categoryName
        FROM categories c
        JOIN category_hobbies ch ON c.category_id = ch.category_id
        WHERE ch.hobby_id = #{hobbyId}
        ORDER BY c.category_name
    </select>

    <!-- 모든 카테고리 목록 조회 -->
    <select id="getAllCategories" resultType="com.example.demo.model.Category">
        SELECT category_id as categoryId, category_name as categoryName
        FROM categories
        ORDER BY category_name
    </select>

    <!-- 사용자의 취미 추가 -->
    <insert id="insertUserHobby" parameterType="com.example.demo.model.UserHobby">
        INSERT INTO user_hobbies (email, hobby_id, category_id)
        VALUES (#{email}, #{hobbyId}, #{categoryId})
    </insert>

    <!-- 사용자의 모든 취미 조회 -->
    <select id="getUserHobbies" parameterType="string" resultType="com.example.demo.model.UserHobby">
        SELECT uh.id, uh.email, uh.hobby_id as hobbyId, uh.category_id as categoryId,
               h.hobby_name as hobbyName, c.category_name as categoryName
        FROM user_hobbies uh
        JOIN hobbies h ON uh.hobby_id = h.hobby_id
        JOIN categories c ON uh.category_id = c.category_id
        WHERE uh.email = #{email}
        ORDER BY h.hobby_name
    </select>

    <!-- 취미가 특정 카테고리에 속하는지 확인 -->
    <select id="isHobbyInCategory" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM category_hobbies
        WHERE hobby_id = #{hobbyId} AND category_id = #{categoryId}
    </select>

    <!-- 사용자의 특정 취미 삭제 -->
    <delete id="deleteUserHobby">
        DELETE FROM user_hobbies
        WHERE email = #{email} AND hobby_id = #{hobbyId}
    </delete>

    <!-- 사용자의 모든 취미 삭제 -->
    <delete id="deleteAllUserHobbies" parameterType="string">
        DELETE FROM user_hobbies
        WHERE email = #{email}
    </delete>
    
    <!-- 카테고리별 취미 목록 조회 -->
    <select id="getHobbiesByCategoryId" parameterType="Long" resultType="com.example.demo.model.Hobby">
        SELECT h.hobby_id, h.hobby_name
        FROM hobbies h
        JOIN category_hobbies ch ON h.hobby_id = ch.hobby_id
        WHERE ch.category_id = #{categoryId}
        ORDER BY h.hobby_name
    </select>
    
</mapper>
