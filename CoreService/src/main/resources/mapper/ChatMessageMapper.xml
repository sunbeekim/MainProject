<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.ChatMessageMapper">
    
    <!-- 메시지 저장 -->
    <insert id="saveChatMessage" parameterType="com.example.demo.model.chat.ChatMessage" useGeneratedKeys="true" keyProperty="messageId">
        INSERT INTO messages (
            chatroom_id, 
            sender_email, 
            content, 
            message_type, 
            sent_at, 
            is_read
        ) VALUES (
            #{chatroomId}, 
            #{senderEmail}, 
            #{content}, 
            #{messageType}, 
            NOW(), 
            #{isRead}
        )
    </insert>
    
    <!-- 메시지 조회 (메시지 ID로) -->
    <select id="findMessageById" parameterType="int" resultType="com.example.demo.model.chat.ChatMessage">
        SELECT 
            message_id as messageId,
            chatroom_id as chatroomId,
            sender_email as senderEmail,
            content,
            message_type as messageType,
            sent_at as sentAt,
            is_read as isRead
        FROM messages
        WHERE message_id = #{messageId}
    </select>
    
    <!-- 채팅방의 메시지 목록 조회 (페이징 처리) -->
    <select id="findMessagesByChatRoomId" resultType="com.example.demo.model.chat.ChatMessage">
        SELECT 
            message_id as messageId,
            chatroom_id as chatroomId,
            sender_email as senderEmail,
            content,
            message_type as messageType,
            sent_at as sentAt,
            is_read as isRead
        FROM messages
        WHERE chatroom_id = #{chatroomId}
        ORDER BY sent_at DESC
        LIMIT #{offset}, #{limit}
    </select>
    
    <!-- 채팅방의 전체 메시지 수 조회 -->
    <select id="countMessagesByChatRoomId" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM messages
        WHERE chatroom_id = #{chatroomId}
    </select>
    
    <!-- 메시지 읽음 상태 업데이트 -->
    <update id="updateMessageReadStatus">
        UPDATE messages
        SET is_read = true
        WHERE chatroom_id = #{chatroomId}
          AND sender_email != #{receiverEmail}
          AND is_read = false
    </update>
</mapper>
