spring.application.name=core-service

server.port=8081

# MySQL 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://sunbee.world:3306/haru_db
spring.datasource.username=user
spring.datasource.password=user
# ?? ??
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# MyBatis 설정
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.example.demo.model
mybatis.configuration.map-underscore-to-camel-case=true

# 로깅 설정
logging.level.org.springframework=INFO
logging.level.com.example.demo=DEBUG
logging.level.org.apache.ibatis=DEBUG
logging.level.org.springframework.security=INFO

# JWT key 설정
jwt.secret=teamsketchprojectsecretkeythisismysecretkeyforsecurity
jwt.expiration=86400000

# JWT 설정 (JwtTokenProvider 클래스용)
security.jwt.token.secret-key=${jwt.secret}
security.jwt.token.expire-length=${jwt.expiration}

jwt.header=Authorization
jwt.prefix=Bearer

# 파일 업로드 설정 추가
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB

# 프로필 이미지 설정
file.upload-dir=${user.home}/haru/uploads/profile-images
file.default-profile-image=default-profile.jpeg
file.max-size=10485760

# Redis 설정
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=
spring.data.redis.timeout=10000ms

# WebSocket 설정
spring.websocket.connection-timeout=10000

# 채팅 관련 설정 
chat.redis.topic.name=chat
chat.default.page-size=20

# 빈 오버라이딩 허용 설정 (빈 이름 충돌 해결)
spring.main.allow-bean-definition-overriding=true

# OAuth2 설정
spring.security.oauth2.client.registration.google.client-id=YOUR_GOOGLE_CLIENT_ID
spring.security.oauth2.client.registration.google.client-secret=YOUR_GOOGLE_CLIENT_SECRET
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/api/core/auth/oauth2/callback/{registrationId}

spring.security.oauth2.client.registration.naver.client-id=YOUR_NAVER_CLIENT_ID
spring.security.oauth2.client.registration.naver.client-secret=YOUR_NAVER_CLIENT_SECRET
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/api/core/auth/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
spring.security.oauth2.client.registration.naver.client-name=Naver

spring.security.oauth2.client.registration.kakao.client-id=YOUR_KAKAO_CLIENT_ID
spring.security.oauth2.client.registration.kakao.client-secret=YOUR_KAKAO_CLIENT_SECRET
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/api/core/auth/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,profile_image,account_email
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post

# Provider 설정
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# 소셜 로그인 후 리다이렉트 URL 설정
oauth2.authorizedRedirectUris=http://localhost:3000/oauth2/redirect