events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    upstream frontend {
        server frontend-container:3000;
    }

    upstream gateway-service {
        server gateway-container:8080;
    }

    upstream core-service {
        server core-container:8081;
    }

    upstream assist-service {
        server assist-container:8082; 
    }

    # HTTP -> HTTPS 리다이렉트
    server {
        listen 80;
        server_name sunbee.world www.sunbee.world;
        
        # Let's Encrypt 인증을 위한 예외 처리
        location /.well-known/acme-challenge/ {
            root /var/www/html;
        }
        
        return 301 https://$host$request_uri;
    }

    # HTTPS 서버
    server {
        listen 443 ssl;
        server_name sunbee.world www.sunbee.world;

        ssl_certificate /nginx/ssl/live/sunbee.world/fullchain.pem;
        ssl_certificate_key /nginx/ssl/live/sunbee.world/privkey.pem;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        
        client_max_body_size 100M;

        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        # 정적 파일 처리
        location /assets/ {
            proxy_pass http://frontend/assets/;
            expires max;
            log_not_found off;
        }

        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|map|html)$ {
            expires max;
            add_header Cache-Control "public, no-transform";
            log_not_found off;
            access_log off;
        }

        # Gateway API 프록시
        location /api/gateway/ {
            proxy_pass http://gateway-service/api/gateway/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

           
        }

        # Core API 프록시
        location /api/core/ {
            proxy_pass http://core-service/api/core/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

        }

        # API 프록시 설정
        location /api/assist/ {
            proxy_pass http://assist-service/api/assist/;  # 경로 수정
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
